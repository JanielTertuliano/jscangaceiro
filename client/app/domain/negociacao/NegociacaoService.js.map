{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","NegociacaoService","constructor","_http","obtemNegociacoesDaSemana","get","then","dados","map","objeto","Date","data","quantidade","valor","err","Error","obtemNegociacoesDaSemanaAnterior","obtemNegociacoesDaSemanaRetrasada","obtemNegociacoesDoPeriodo","periodo","Promise","all","reduce","novoArray","item","concat","sort","a","b","getTime","console","log"],"mappings":";;;;;;AAASA,uB,sBAAAA,W;;AACAC,sB,iBAAAA,U;;;AAEF,kBAAMC,iBAAN,CAAwB;;AAE3BC,8BAAc;;AAEV,yBAAKC,KAAL,GAAa,IAAIJ,WAAJ,EAAb;AACH;;AAEDK,2CAA2B;;AAEvB,2BAAO,KAAKD,KAAL,CACFE,GADE,CACE,oBADF,EAEFC,IAFE,CAGCC,SACIA,MAAMC,GAAN,CAAUC,UACN,IAAIT,UAAJ,CAAe,IAAIU,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADJ,CAJL,EAOCC,OAAO;;AAEH,8BAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AACH,qBAVF,CAAP;AAYH;;AAEDC,mDAAmC;;AAE/B,2BAAO,KAAKb,KAAL,CACFE,GADE,CACE,sBADF,EAEFC,IAFE,CAGCC,SAASA,MAAMC,GAAN,CAAUC,UACf,IAAIT,UAAJ,CAAe,IAAIU,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADK,CAHV,EAMCC,OAAO;;AAEH,8BAAM,IAAIC,KAAJ,CAAU,0DAAV,CAAN;AACH,qBATF,CAAP;AAWH;;AAEDE,oDAAoC;;AAEhC,2BAAO,KAAKd,KAAL,CACFE,GADE,CACE,uBADF,EAEFC,IAFE,CAGCC,SAASA,MAAMC,GAAN,CAAUC,UACf,IAAIT,UAAJ,CAAe,IAAIU,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADK,CAHV,EAMCC,OAAO;AACH,8BAAM,IAAIC,KAAJ,CAAU,2DAAV,CAAN;AACH,qBARF,CAAP;AAUH;;AAED,sBAAMG,yBAAN,GAAkC;AAC9B,wBAAI;AACA,4BAAIC,UAAU,MAAMC,QAAQC,GAAR,CAAY,CAC5B,KAAKjB,wBAAL,EAD4B,EAE5B,KAAKY,gCAAL,EAF4B,EAG5B,KAAKC,iCAAL,EAH4B,CAAZ,CAApB;;AAMA,+BAAOE,QACFG,MADE,CACK,CAACC,SAAD,EAAYC,IAAZ,KAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CAD1B,EACkD,EADlD,EAEFE,IAFE,CAEG,CAACC,CAAD,EAAIC,CAAJ,KAAUA,EAAEjB,IAAF,CAAOkB,OAAP,KAAmBF,EAAEhB,IAAF,CAAOkB,OAAP,EAFhC,CAAP;AAGH,qBAVD,CAUE,OAAMf,GAAN,EAAW;;AAETgB,gCAAQC,GAAR,CAAYjB,GAAZ;AACA,8BAAM,IAAIC,KAAJ,CAAU,kDAAV,CAAN;AACH;AACJ;AApE0B","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from '../../util/HttpService.js';\nimport { Negociacao } from './Negociacao.js';\n\nexport class NegociacaoService {\n\n    constructor() {\n\n        this._http = new HttpService();\n    }\n\n    obtemNegociacoesDaSemana() {\n    \n        return this._http\n            .get('negociacoes/semana')\n            .then(\n                dados => \n                    dados.map(objeto => \n                        new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n                ,\n                err => {\n\n                    throw new Error('Não foi possível obter as negociações da semana');\n                }\n            );\n    }\n\n    obtemNegociacoesDaSemanaAnterior() {\n        \n        return this._http\n            .get('negociacoes/anterior')\n            .then(\n                dados => dados.map(objeto =>\n                    new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n                ,\n                err => {\n                    \n                    throw new Error('Não foi possível obter as negociações da semana anterior');\n                }\n            );\n    }\n\n    obtemNegociacoesDaSemanaRetrasada() {\n        \n        return this._http\n            .get('negociacoes/retrasada')\n            .then(\n                dados => dados.map(objeto =>\n                    new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n                ,\n                err => {\n                    throw new Error('Não foi possível obter as negociações da semana retrasada');\n                }\n            );\n    }  \n\n    async obtemNegociacoesDoPeriodo() {\n        try {\n            let periodo = await Promise.all([\n                this.obtemNegociacoesDaSemana(),\n                this.obtemNegociacoesDaSemanaAnterior(),\n                this.obtemNegociacoesDaSemanaRetrasada()\n            ]);\n\n            return periodo\n                .reduce((novoArray, item) => novoArray.concat(item), [])\n                .sort((a, b) => b.data.getTime() - a.data.getTime());\n        } catch(err) {\n\n            console.log(err);\n            throw new Error('Não foi possível obter as negociações do período');\n        }\n    }             \n}"]}